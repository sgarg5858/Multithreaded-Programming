
Daemon thread in java is a service provider thread that provides services to the user thread.
Its life depend on the mercy of user threads.
when all the user threads dies, JVM terminates this thread automatically.



class Runner extends Thread{

	@Override
	public void run() {
		if(Thread.currentThread().isDaemon())
		{
			System.out.println("Daemon Thread");
		}
		else
		{
			System.out.println("User Thread");
		}
		}
	
}
public class CreatingThread {

	public static void main(String[] args) {
		Runner runner1=new Runner();
		Runner runner2=new Runner();
		Runner runner3=new Runner();
		
		runner1.setDaemon(true);
         runner1.start();
 		 runner2.start();
 		runner3.start();

		
	}

}
Output:
Daemon Thread
User Thread
User Thread

Example2:

class Runner extends Thread{

	@Override
	public void run() {
		Thread ad=new AnotherDaemon();
		if(Thread.currentThread().isDaemon())
		{
			System.out.println(Thread.currentThread().getName()+" is Daemon Thread");
		}
		else
		{
			System.out.println(Thread.currentThread().getName()+" User Thread");
		}
		if(ad.isDaemon())
		{
			System.out.println(Thread.currentThread().getName() +"Daemon Thread");
		}
		else
		{
			System.out.println(Thread.currentThread().getName() +"User Thread");
		}
		}
	
}
class AnotherDaemon extends Thread{
    public void run() {
        System.out.println("AnotherDaemon thread run() method");
    }
}
public class CreatingThread {

	public static void main(String[] args) {
		Runner runner1=new Runner();
		Runner runner2=new Runner();

        
        runner1.setDaemon(true);
        runner1.start();
        runner2.start();
	}

}
Output:
Thread-1 User Thread
Thread-1User Thread
Thread-0 is Daemon Thread
Thread-0Daemon Thread

Thread Created by user thread is user thread and thread created by daemon thread is daemon thread... 
